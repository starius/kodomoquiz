worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;

events {
  worker_connections 1024;
}

http {
  include mime.types;

  resolver 8.8.8.8;

  server {
    listen 127.0.0.1:${{PORT}};
    lua_code_cache ${{CODE_CACHE}};

    location / {
      set $_url "";
      default_type text/html;
      content_by_lua '
        require("lapis").serve("app")
      ';
    }

    location /proxy {
        internal;
        rewrite_by_lua "
            local req = ngx.req

            for k,v in pairs(req.get_headers()) do
                if k ~= 'content-length' then
                    req.clear_header(k)
                end
            end

            if ngx.ctx.headers then
                for k,v in pairs(ngx.ctx.headers) do
                    req.set_header(k, v)
                end
            end
        ";

        resolver 8.8.8.8;
        proxy_http_version 1.1;
        proxy_pass $_url;
    }

    location /static/ {
      alias static/;
    }

    location /favicon.ico {
      alias static/favicon.ico;
    }
  }
}
